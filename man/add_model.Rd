% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epi_workflow.R
\name{add_model}
\alias{add_model}
\alias{remove_model}
\alias{update_model}
\alias{add_model.epi_workflow}
\alias{remove_model.epi_workflow}
\alias{update_model.epi_workflow}
\title{Add a model to an \code{epi_workflow}}
\usage{
add_model(x, spec, ..., formula = NULL)

remove_model(x)

update_model(x, spec, ..., formula = NULL)

\method{add_model}{epi_workflow}(x, spec, ..., formula = NULL)

\method{remove_model}{epi_workflow}(x)

\method{update_model}{epi_workflow}(x, spec, ..., formula = NULL)
}
\arguments{
\item{x}{An \code{epi_workflow}.}

\item{spec}{A parsnip model specification.}

\item{...}{Not used.}

\item{formula}{An optional formula override to specify the terms of the
model. Typically, the terms are extracted from the formula or recipe
preprocessing methods. However, some models (like survival and bayesian
models) use the formula not to preprocess, but to specify the structure
of the model. In those cases, a formula specifying the model structure
must be passed unchanged into the model call itself. This argument is
used for those purposes.}
}
\value{
\code{x}, updated with a new, updated, or removed model.
}
\description{
Add a model to an \code{epi_workflow}
}
\details{
Has the same behaviour as \code{\link[workflows:add_model]{workflows::add_model()}} but also ensures
that the returned object is an \code{epi_workflow}.
}
\examples{
jhu <- case_death_rate_subset \%>\%
  dplyr::filter(
    time_value > "2021-11-01",
    geo_value \%in\% c("ak", "ca", "ny")
  )

r <- epi_recipe(jhu) \%>\%
  step_epi_lag(death_rate, lag = c(0, 7, 14)) \%>\%
  step_epi_ahead(death_rate, ahead = 7)

rf_model <- rand_forest(mode = "regression")

wf <- epi_workflow(r)

wf <- wf \%>\% add_model(rf_model)
wf

lm_model <- parsnip::linear_reg()

wf <- update_model(wf, lm_model)
wf

wf <- remove_model(wf)
wf
}
\seealso{
\code{\link[workflows:add_model]{workflows::add_model()}}
\itemize{
\item \code{add_model()} adds a parsnip model to the \code{epi_workflow}.
\item \code{remove_model()} removes the model specification as well as any fitted
model object. Any extra formulas are also removed.
\item \code{update_model()} first removes the model then adds the new
specification to the workflow.
}
}
