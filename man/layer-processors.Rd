% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract.R, R/layers.R
\name{extract_layers}
\alias{extract_layers}
\alias{extract_layers.frosting}
\alias{extract_layers.workflow}
\alias{layer-processors}
\alias{is_layer}
\alias{validate_layer}
\alias{detect_layer}
\alias{detect_layer.frosting}
\alias{detect_layer.workflow}
\title{Extract, validate, or detect layers of frosting}
\usage{
extract_layers(x, ...)

\method{extract_layers}{frosting}(x, ...)

\method{extract_layers}{workflow}(x, ...)

is_layer(x)

validate_layer(x, ..., arg = rlang::caller_arg(x), call = caller_env())

detect_layer(x, name, ...)

\method{detect_layer}{frosting}(x, name, ...)

\method{detect_layer}{workflow}(x, name, ...)
}
\arguments{
\item{x}{an \code{epi_workflow}, \code{frosting}, or \code{layer} object}

\item{...}{additional arguments for possible future methods}

\item{arg}{the name of the input (for error reporting)}

\item{call}{the environment (for error reporting)}

\item{name}{a layer name to detect}
}
\value{
A logical for the validators/detectors or a list of layers for
the extractors
}
\description{
These functions are mainly internal. They can access and validate
different layers of \code{frosting}.
}
\examples{

f <- frosting() \%>\% layer_predict()
wf <- epi_workflow(postprocessor = f)

is_layer(layer("what_the_what"))
detect_layer(f, "layer_predict")
detect_layer(wf, "layer_predict")

extract_layers(f)
extract_layers(wf)
}
